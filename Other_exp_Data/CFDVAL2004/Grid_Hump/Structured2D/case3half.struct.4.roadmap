This grid is VERY similar to Grid #2 (case3half.struct.1.p2dfmt), 
with the exception that the top wall's shape has been adjusted to 
APPROXIMATELY account for blockage caused by the side plates in 
the experiment.

The medium case3half.struct.4.p2dfmt grid is exactly 
every other point in each coordinate direction of the 
fine case3.struct.4.p2dfmt grid.  Thus, the zone sizes
are as follows:
 397x109
  81x 61
  33x 61
  25x109

Also, all the BCs are the same as described in the roadmap 
file for the fine grid, and the 1-to-1 connectivity is
as follows:

   1-1 BLOCKING DATA:
      NBLI
         3
 NUMBER   GRID     :    ISTA   JSTA   KSTA   IEND   JEND   KEND  ISVA1  ISVA2
      1      1             1    117      1      2    177      1      1      2
      2      3             1      1      1      2      1     61      1      3
      3      1             1      1      1      2      1    109      1      3
 NUMBER   GRID     :    ISTA   JSTA   KSTA   IEND   JEND   KEND  ISVA1  ISVA2
      1      3             1     33     61      2     33      1      1      3
      2      2             1     81      1      2     81     61      1      3
      3      4             1     25      1      2     25    109      1      3

The way to read the above table is to match the number 
from the 1st set with the number from the 2nd set.  For
example, for interface number 1, grid 1 connects with grid 3.
Because this is a 2-D grid, the i-indices ISTA and IEND
are irrelevant.  The j-index from zone 1 from 117-177 
(at k=1) matches up with the k-index from zone 3 from
61-33 (reverse ordering) (at j=33).  The parameters isva1 
and iva2 indicate which index is varying (but because
this is a 2-D grid, the fact that the i-index is varying
(ISVA1=1) is irrelevant)... for interface
number 1 the j-index (ISVA2=2) is varying in grid 1, 
and the k-index (ISVA=3) is varying in grid 3.

Format for the structured grid is PLOT3D-type, formatted, 
MG, 2D:

      read(2,*) nbl
      read(2,*) (idim(n),jdim(n),n=1,nbl)
      do n=1,nbl
        read(2,*) ((x(i,j,n),i=1,idim(n)),j=1,jdim(n)),
     +            ((y(i,j,n),i=1,idim(n)),j=1,jdim(n))
      enddo
